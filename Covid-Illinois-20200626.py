# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11Luu0bRF0y6T1LKqyjQgAXVUysVokixD
"""

# Commented out IPython magic to ensure Python compatibility.
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
 
import numpy as np, pandas as pd, matplotlib.pyplot as plt, seaborn as sns
# %matplotlib inline
from scipy import stats
from datetime import datetime
 
pd.options.mode.chained_assignment = None  # default='warn'
pd.set_option('display.max_rows', 200)
 
csvFile = 'https://covidtracking.com/api/v1/states/daily.csv'
df = pd.read_csv(csvFile)
 
# below columns are depreciated
df = df.drop(['checkTimeEt', 'commercialScore', 'dateChecked', 'dateModified',
              'deathIncrease', 'grade', 'hospitalized', 'hospitalizedIncrease',
              'negativeIncrease', 'negativeRegularScore', 'negativeScore',
              'posNeg', 'positiveIncrease', 'positiveScore', 'score',
              'total', 'totalTestResultsIncrease'], axis=1)
 
# lockdown dates
csvFile = '/data/Covid columns needed.csv'
df_lockdown = pd.read_csv(csvFile)
 
# In Illinois, Masks were mandatory inside of closed spaces, grocery stores
# "Beginning May 1, Illinois residents will be
# required to wear a mask or face covering in public places
# and in situations where they are unable to keep their distance
# from others. The new mandate is part of Gov. J.B. Pritzkerâ€™s
# extension of the stay-at-home order."   [7]
df_lockdown['Mask Mandate'] = [20200501]
 
# Chicago restaurants may start to operate at 25% capacity
# starting June 26.
# Patios and outdoor dining may be open starting June 3       [10]
df_lockdown['Patio Dining'] = [20200603]
 
# Phase four of "Restore Illinois" allows for the reopening
# or expansion of several industries, including indoor dining
# at restaurants, health and fitness, movies and theaters,
# museums and zoos and more. This next phase also increases
# the size of gatherings that are allowed from 10 people
# to a maximum of 50 people.                                    [13]
 
# Indoor Dining, Gyms, Theatres, Museums, Zoos
df_lockdown['Phase 4 - Indoor Business'] = [20200626]
 
 
# smaller dataset to work with - all states
df1 = df[['date', 'state', 'positive', 'negative', 'death',
          'totalTestResults']].copy()
 
dfIL = df1.loc[df1['state'] == 'IL']
dfDiff = dfIL['positive'].diff() * -1
dfDiff = dfDiff.fillna(0).to_frame()
dfDiff.columns = ['posDiff']
dfIL = dfIL.join(dfDiff)
 
 
dfDeath = dfIL['death'].diff() * -1
dfDeath = dfDeath.fillna(0).to_frame()
dfDeath.columns = ['deathDiff']
dfIL = dfIL.join(dfDeath)
 
pDMax = max(dfIL['posDiff'])                # used to graph: y-limit for scaling,
dDMax = max(dfIL['deathDiff'])              #                reference lines, text
lengthP = pDMax
 
def startOfMonth(pos, name):
  m = 175
  plt.hlines(xmin=0, xmax=m, y=pos, linestyles='dashed')
  plt.text(m, pos, name, fontsize=10, va='top')
 
plt.subplots(figsize=(20,10))
 
plt.text(-2000, 5, 'Illinois', fontsize=20, va='bottom')      # [5]
plt.text(-500, 5, 'Positive Cases', fontsize=10, va='bottom')      # [5]
plt.text(50, 5, 'Deaths', fontsize=10, va='bottom')
plt.text(-pDMax, 0, 'Source: https://covidtracking.com/', fontsize=12, va='top')
 
# plot lines and 2 weeks later
def event(dateIndex, color, label, pos='bottom'):
  plt.hlines(xmin=0, xmax=-lengthP, y=dateIndex, colors=color, linestyles='solid')
  plt.text(-lengthP, dateIndex, label, fontsize=14, va=pos)
  plt.hlines(xmin=0, xmax=-lengthP+250, y=dateIndex+14, colors=color, linestyles='dashed')
  plt.text(-lengthP+150, dateIndex+14, f'{label} - 2 weeks later', fontsize=14, va=pos)
 
startOfMonth(29, 'April 1')
startOfMonth(59, 'May 1')
startOfMonth(90, 'June 1')
startOfMonth(121, 'July 1')
 
event(12, 'red', 'Bars, Restaurants Closed')
event(18, 'k', 'Phase 1')
event(58, 'k', 'Phase 2')
event(59, 'blue', 'Mask Mandate', 'top')
event(87, 'k', 'Phase 3/ George Floyd Riots')
event(111, 'blue', '606/ LFT')
event(115, 'k', 'Phase 4 - Indoor Business')
 
sns.barplot(y=dfIL['date'], x=(dfIL['posDiff'] * -1), color='red', orient='h');
sns.barplot(y=dfIL['date'], x=dfIL['deathDiff'], color='k', orient="h");